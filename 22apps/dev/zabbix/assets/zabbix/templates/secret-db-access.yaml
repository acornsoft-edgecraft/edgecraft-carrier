{{- if and .Values.postgresAccess.useUnifiedSecret .Values.postgresAccess.unifiedSecretAutoCreate .Values.postgresql.enabled }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.postgresAccess.unifiedSecretName }}
  annotations:
    "helm.sh/resource-policy": keep
  labels:
    app: {{ template "zabbix.fullname" . }}-db-access
    app.kubernetes.io/name: db-access
    helm.sh/chart: {{ include "zabbix.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}-db-access
    app.kubernetes.io/managed-by: {{ .Release.Service }}-db-access
type: Opaque
data:
  {{- $secretObj := (lookup "v1" "Secret" .Release.Namespace .Values.postgresAccess.unifiedSecretName) | default dict }}
  {{- $secretData := (get $secretObj "data") | default dict }}
  {{- $secretHost := (get $secretData "host") | default (printf "%s-%s" (include "zabbix.fullname" .) "postgresql" | b64enc) }}
  {{- $secretPort := (get $secretData "port") | default (.Values.postgresql.service.port | toString | b64enc) }}
  {{- $secretDbname := (get $secretData "dbname") | default ("zabbix" | b64enc) }}
  {{- $secretUser := (get $secretData "user") | default ("zabbix" | b64enc) }}
  {{- $secretPassword := (get $secretData "password") | default (randAlphaNum 16 | b64enc) }}
  host: {{ $secretHost | quote }}
  port: {{ $secretPort | quote }}
  dbname: {{ $secretDbname | quote }}
  user: {{ $secretUser | quote }}
  password: {{ $secretPassword | quote }}
{{- end }}
