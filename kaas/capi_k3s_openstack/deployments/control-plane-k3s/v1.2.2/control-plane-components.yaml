apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: capi-k3s-control-plane-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/v1beta1: v1beta1
  name: kthreescontrolplanes.controlplane.cluster.x-k8s.io
spec:
  group: controlplane.cluster.x-k8s.io
  names:
    kind: KThreesControlPlane
    listKind: KThreesControlPlaneList
    plural: kthreescontrolplanes
    singular: kthreescontrolplane
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: This denotes whether or not the control plane has completed the
        k3s server initialization
      jsonPath: .status.initialized
      name: Initialized
      type: boolean
    - description: KThreesControlPlane API Server is ready to receive requests
      jsonPath: .status.ready
      name: API Server Available
      type: boolean
    - description: Kubernetes version associated with this control plane
      jsonPath: .spec.version
      name: Version
      type: string
    - description: Total number of non-terminated machines targeted by this control
        plane
      jsonPath: .status.replicas
      name: Replicas
      type: integer
    - description: Total number of fully running and ready control plane machines
      jsonPath: .status.readyReplicas
      name: Ready
      type: integer
    - description: Total number of non-terminated machines targeted by this control
        plane that have the desired template spec
      jsonPath: .status.updatedReplicas
      name: Updated
      type: integer
    - description: Total number of unavailable machines targeted by this control plane
      jsonPath: .status.unavailableReplicas
      name: Unavailable
      type: integer
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: KThreesControlPlane is the Schema for the kthreescontrolplanes
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: KThreesControlPlaneSpec defines the desired state of KThreesControlPlane
            properties:
              infrastructureTemplate:
                description: InfrastructureTemplate is a required reference to a custom
                  resource offered by an infrastructure provider.
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
              kthreesConfigSpec:
                description: KThreesConfigSpec is a KThreesConfigSpec to use for initializing
                  and joining machines to the control plane.
                properties:
                  agentConfig:
                    description: AgentConfig specifies configuration for the agent
                      nodes
                    properties:
                      kubeProxyArgs:
                        description: KubeProxyArgs Customized flag for kube-proxy
                          process
                        items:
                          type: string
                        type: array
                      kubeletArgs:
                        description: KubeletArgs Customized flag for kubelet process
                        items:
                          type: string
                        type: array
                      nodeLabels:
                        description: NodeLabels  Registering and starting kubelet
                          with set of labels
                        items:
                          type: string
                        type: array
                      nodeName:
                        description: NodeName Name of the Node
                        type: string
                      nodeTaints:
                        description: NodeTaints Registering kubelet with set of taints
                        items:
                          type: string
                        type: array
                      privateRegistry:
                        description: 'TODO: take in a object or secret and write to
                          file. this is not useful PrivateRegistry  registry configuration
                          file (default: "/etc/rancher/k3s/registries.yaml")'
                        type: string
                    type: object
                  files:
                    description: Files specifies extra files to be passed to user_data
                      upon creation.
                    items:
                      description: File defines the input for generating write_files
                        in cloud-init.
                      properties:
                        content:
                          description: Content is the actual content of the file.
                          type: string
                        contentFrom:
                          description: ContentFrom is a referenced source of content
                            to populate the file.
                          properties:
                            secret:
                              description: Secret represents a secret that should
                                populate this file.
                              properties:
                                key:
                                  description: Key is the key in the secret's data
                                    map for this value.
                                  type: string
                                name:
                                  description: Name of the secret in the KThreesBootstrapConfig's
                                    namespace to use.
                                  type: string
                              required:
                              - key
                              - name
                              type: object
                          required:
                          - secret
                          type: object
                        encoding:
                          description: Encoding specifies the encoding of the file
                            contents.
                          enum:
                          - base64
                          - gzip
                          - gzip+base64
                          type: string
                        owner:
                          description: Owner specifies the ownership of the file,
                            e.g. "root:root".
                          type: string
                        path:
                          description: Path specifies the full path on disk where
                            to store the file.
                          type: string
                        permissions:
                          description: Permissions specifies the permissions to assign
                            to the file, e.g. "0640".
                          type: string
                      required:
                      - path
                      type: object
                    type: array
                  postK3sCommands:
                    description: PostK3sCommands specifies extra commands to run after
                      k3s setup runs
                    items:
                      type: string
                    type: array
                  preK3sCommands:
                    description: PreK3sCommands specifies extra commands to run before
                      k3s setup runs
                    items:
                      type: string
                    type: array
                  serverConfig:
                    description: ServerConfig specifies configuration for the agent
                      nodes
                    properties:
                      advertiseAddress:
                        description: 'AdvertiseAddress IP address that apiserver uses
                          to advertise to members of the cluster (default: node-external-ip/node-ip)'
                        type: string
                      advertisePort:
                        description: 'AdvertisePort Port that apiserver uses to advertise
                          to members of the cluster (default: listen-port) (default:
                          0)'
                        type: string
                      bindAddress:
                        description: 'BindAddress k3s bind address (default: 0.0.0.0)'
                        type: string
                      clusterCidr:
                        description: 'ClusterCidr  Network CIDR to use for pod IPs
                          (default: "10.42.0.0/16")'
                        type: string
                      clusterDNS:
                        description: 'ClusterDNS  Cluster IP for coredns service.
                          Should be in your service-cidr range (default: 10.43.0.10)'
                        type: string
                      clusterDomain:
                        description: 'ClusterDomain Cluster Domain (default: "cluster.local")'
                        type: string
                      disableComponents:
                        description: DisableComponents  specifies extra commands to
                          run before k3s setup runs
                        items:
                          type: string
                        type: array
                      httpsListenPort:
                        description: 'HttpsListenPort HTTPS listen port (default:
                          6443)'
                        type: string
                      kubeAPIServerArg:
                        description: KubeAPIServerArgs is a customized flag for kube-apiserver
                          process
                        items:
                          type: string
                        type: array
                      kubeControllerManagerArgs:
                        description: KubeControllerManagerArgs is a customized flag
                          for kube-controller-manager process
                        items:
                          type: string
                        type: array
                      serviceCidr:
                        description: 'ServiceCidr Network CIDR to use for services
                          IPs (default: "10.43.0.0/16")'
                        type: string
                      tlsSan:
                        description: TLSSan Add additional hostname or IP as a Subject
                          Alternative Name in the TLS cert
                        items:
                          type: string
                        type: array
                    type: object
                  version:
                    description: Version specifies the k3s version
                    type: string
                type: object
              nodeDrainTimeout:
                description: 'NodeDrainTimeout is the total amount of time that the
                  controller will spend on draining a controlplane node The default
                  value is 0, meaning that the node can be drained without any time
                  limitations. NOTE: NodeDrainTimeout is different from `kubectl drain
                  --timeout`'
                type: string
              replicas:
                description: Number of desired machines. Defaults to 1. When stacked
                  etcd is used only odd numbers are permitted, as per [etcd best practice](https://etcd.io/docs/v3.3.12/faq/#why-an-odd-number-of-cluster-members).
                  This is a pointer to distinguish between explicit zero and not specified.
                format: int32
                type: integer
              upgradeAfter:
                description: UpgradeAfter is a field to indicate an upgrade should
                  be performed after the specified time even if no changes have been
                  made to the KThreesControlPlane
                format: date-time
                type: string
              version:
                description: Version defines the desired Kubernetes version.
                type: string
            required:
            - infrastructureTemplate
            - version
            type: object
          status:
            description: KThreesControlPlaneStatus defines the observed state of KThreesControlPlane
            properties:
              conditions:
                description: Conditions defines current service state of the KThreesControlPlane.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.
                        If that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    severity:
                      description: Severity provides an explicit classification of
                        Reason code, so the users or machines can immediately understand
                        the current situation and act accordingly. The Severity field
                        MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              failureMessage:
                description: ErrorMessage indicates that there is a terminal problem
                  reconciling the state, and will be set to a descriptive error message.
                type: string
              failureReason:
                description: FailureReason indicates that there is a terminal problem
                  reconciling the state, and will be set to a token value suitable
                  for programmatic interpretation.
                type: string
              initialized:
                description: Initialized denotes whether or not the k3s server is
                  initialized.
                type: boolean
              observedGeneration:
                description: ObservedGeneration is the latest generation observed
                  by the controller.
                format: int64
                type: integer
              ready:
                description: Ready denotes that the KThreesControlPlane API Server
                  is ready to receive requests.
                type: boolean
              readyReplicas:
                description: Total number of fully running and ready control plane
                  machines.
                format: int32
                type: integer
              replicas:
                description: Total number of non-terminated machines targeted by this
                  control plane (their labels match the selector).
                format: int32
                type: integer
              selector:
                description: 'Selector is the label selector in string format to avoid
                  introspection by clients, and is used to provide the CRD-based integration
                  for the scale subresource and additional integrations for things
                  like kubectl describe.. The string will be in the same format as
                  the query-param syntax. More info about label selectors: http://kubernetes.io/docs/user-guide/labels#label-selectors'
                type: string
              unavailableReplicas:
                description: Total number of unavailable machines targeted by this
                  control plane. This is the total number of machines that are still
                  required for the deployment to have 100% available capacity. They
                  may either be machines that are running but not yet ready or machines
                  that still have not been created.
                format: int32
                type: integer
              updatedReplicas:
                description: Total number of non-terminated machines targeted by this
                  control plane that have the desired template spec.
                format: int32
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      scale:
        labelSelectorPath: .status.selector
        specReplicasPath: .spec.replicas
        statusReplicasPath: .status.replicas
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: capi-k3s-control-plane-leader-election-role
  namespace: capi-k3s-control-plane-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: capi-k3s-control-plane-manager-role
rules:
- apiGroups:
  - bootstrap.cluster.x-k8s.io
  - controlplane.cluster.x-k8s.io
  - infrastructure.cluster.x-k8s.io
  resources:
  - '*'
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - clusters
  - clusters/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - machines
  - machines/status
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - get
  - list
  - patch
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: capi-k3s-control-plane-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: capi-k3s-control-plane-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: capi-k3s-control-plane-leader-election-rolebinding
  namespace: capi-k3s-control-plane-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: capi-k3s-control-plane-leader-election-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: capi-k3s-control-plane-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: capi-k3s-control-plane-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: capi-k3s-control-plane-manager-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: capi-k3s-control-plane-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: capi-k3s-control-plane-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: capi-k3s-control-plane-proxy-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: capi-k3s-control-plane-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
  name: capi-k3s-control-plane-controller-manager-metrics-service
  namespace: capi-k3s-control-plane-system
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
  name: capi-k3s-control-plane-controller-manager
  namespace: capi-k3s-control-plane-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.5.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
      - args:
        - --metrics-addr=127.0.0.1:8080
        - --enable-leader-election
        command:
        - /manager
        image: ghcr.io/zawachte/cluster-api-k3s/controlplane-controller:v0.1.5
        name: manager
        resources:
          limits:
            cpu: 100m
            memory: 30Mi
          requests:
            cpu: 100m
            memory: 20Mi
      terminationGracePeriodSeconds: 10
