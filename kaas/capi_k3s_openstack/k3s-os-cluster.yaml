apiVersion: v1
data:
  cacert: Cg==
  clouds.yaml: Y2xvdWRzOgogIG9wZW5zdGFjazoKICAgIGF1dGg6CiAgICAgIGF1dGhfdXJsOiBodHRwOi8vMTkyLjE2OC43Ny4xMS9pZGVudGl0eQogICAgICB1c2VybmFtZTogInN1bm1pIgogICAgICBwYXNzd29yZDogImZrZmZrNDQ4IgogICAgICBwcm9qZWN0X2lkOiA1NDJlN2EwNGY2OTE0ODI5YjQzZTc3ZjllZjEyYjc3OQogICAgICBwcm9qZWN0X25hbWU6ICJlZGdlY3JhZnQiCiAgICAgIHVzZXJfZG9tYWluX25hbWU6ICJEZWZhdWx0IgogICAgcmVnaW9uX25hbWU6ICJSZWdpb25PbmUiCiAgICBpbnRlcmZhY2U6ICJwdWJsaWMiCiAgICBpZGVudGl0eV9hcGlfdmVyc2lvbjogMwo=
kind: Secret
metadata:
  labels:
    clusterctl.cluster.x-k8s.io/move: "true"
  name: k3s-os-cluster-cloud-config
  namespace: default
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: Cluster
metadata:
  labels:
    ccm: external
    cni: calico
  name: k3s-os-cluster
  namespace: default
spec:
  clusterNetwork:
    pods:
      cidrBlocks:
      - 10.96.0.1/12
    serviceDomain: cluster.local
  controlPlaneRef:
    apiVersion: controlplane.cluster.x-k8s.io/v1beta1
    kind: KThreesControlPlane
    name: k3s-os-cluster-control-plane
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1alpha5
    kind: OpenStackCluster
    name: k3s-os-cluster
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha5
kind: OpenStackCluster
metadata:
  name: k3s-os-cluster
  namespace: default
spec:
  allowAllInClusterTraffic: true
  apiServerLoadBalancer:
    enabled: false
  cloudName: openstack
  dnsNameservers: []
  externalNetworkId: public
  identityRef:
    kind: Secret
    name: k3s-os-cluster-cloud-config
  managedSecurityGroups: true
  nodeCidr: 10.6.0.0/24
---
apiVersion: controlplane.cluster.x-k8s.io/v1beta1
kind: KThreesControlPlane
metadata:
  name: k3s-os-cluster-control-plane
  namespace: default
spec:
  infrastructureTemplate:
    apiVersion: infrastructure.cluster.x-k8s.io/v1alpha5
    kind: OpenStackMachineTemplate
    name: k3s-os-cluster-control-plane
  kthreesConfigSpec:
    agentConfig:
      nodeName: '{{ ds.meta_data.local_hostname }}'
    files:
    - content: W0dsb2JhbF0KYXV0aC11cmw9aHR0cDovLzE5Mi4xNjguNzcuMTEvaWRlbnRpdHkKdXNlcm5hbWU9InN1bm1pIgpwYXNzd29yZD0iZmtmZms0NDgiCnRlbmFudC1pZD0iNTQyZTdhMDRmNjkxNDgyOWI0M2U3N2Y5ZWYxMmI3NzkiCnRlbmFudC1uYW1lPSJlZGdlY3JhZnQiCmRvbWFpbi1uYW1lPSJEZWZhdWx0IgpyZWdpb249IlJlZ2lvbk9uZSIK
      encoding: base64
      owner: root
      path: /etc/kubernetes/cloud.conf
      permissions: "0644"
    - content: Cg==
      encoding: base64
      owner: root
      path: /etc/certs/cacert
      permissions: "0600"
    serverConfig:
      disableComponents:
      - servicelb
      - traefik
      - flannel
  replicas: 1
  version: v1.23.8+k3s2
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha5
kind: OpenStackMachineTemplate
metadata:
  name: k3s-os-cluster-control-plane
  namespace: default
spec:
  template:
    spec:
      cloudName: openstack
      flavor: m1.medium
      identityRef:
        kind: Secret
        name: k3s-os-cluster-cloud-config
      image: ubuntu20.04
      sshKeyName: sunmi
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: MachineDeployment
metadata:
  name: k3s-os-cluster-md-0
  namespace: default
spec:
  clusterName: k3s-os-cluster
  replicas: 1
  selector:
    matchLabels: null
  template:
    spec:
      bootstrap:
        configRef:
          apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
          kind: KThreesConfigTemplate
          name: k3s-os-cluster-md-0
      clusterName: k3s-os-cluster
      failureDomain: nova
      infrastructureRef:
        apiVersion: infrastructure.cluster.x-k8s.io/v1alpha5
        kind: OpenStackMachineTemplate
        name: k3s-os-cluster-md-0
      version: v1.23.8+k3s2
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha5
kind: OpenStackMachineTemplate
metadata:
  name: k3s-os-cluster-md-0
  namespace: default
spec:
  template:
    spec:
      cloudName: openstack
      flavor: m1.medium
      identityRef:
        kind: Secret
        name: k3s-os-cluster-cloud-config
      image: ubuntu20.04
      sshKeyName: sunmi
---
apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
kind: KThreesConfigTemplate
metadata:
  name: k3s-os-cluster-md-0
  namespace: default
spec:
  template:
    spec:
      agentConfig:
        nodeName: '{{ ds.meta_data.local_hostname }}'
