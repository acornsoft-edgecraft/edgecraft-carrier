apiVersion: v1
data:
  cacert: ${OPENSTACK_CLOUD_CACERT_B64}
  clouds.yaml: ${OPENSTACK_CLOUD_YAML_B64}
kind: Secret
metadata:
  labels:
    clusterctl.cluster.x-k8s.io/move: "true"
  name: ${CLUSTER_NAME}-cloud-config
  namespace: default
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: Cluster
metadata:
  name: ${CLUSTER_NAME}
  namespace: default
  labels:
    csiNfsChart: enabled
    dashboardChart: enabled
    veleroChart: enabled
spec:
  clusterNetwork:
    pods:
      cidrBlocks:
        - ${POD_CIDR}
    services:
      cidrBlocks:
        - ${SVC_CIDR}
    serviceDomain: cluster.local
  controlPlaneRef:
    apiVersion: controlplane.cluster.x-k8s.io/v1beta1
    kind: MicroK8sControlPlane
    name: ${CLUSTER_NAME}-control-plane
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1alpha6
    kind: OpenStackCluster
    name: ${CLUSTER_NAME}
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha6
kind: OpenStackCluster
metadata:
  name: ${CLUSTER_NAME}
  namespace: default
spec:
  apiServerLoadBalancer:
    enabled: true
  cloudName: ${OPENSTACK_CLOUD}
  dnsNameservers:
    - ${OPENSTACK_DNS_NAMESERVERS:=}
  externalNetworkId: ${OPENSTACK_EXTERNAL_NETWORK_ID:=""}
  identityRef:
    kind: Secret
    name: ${CLUSTER_NAME}-cloud-config
  managedSecurityGroups: true
  allowAllInClusterTraffic: true
  nodeCidr: ${OPENSTACK_NETWORK_CIDR}
---
apiVersion: controlplane.cluster.x-k8s.io/v1beta1
kind: MicroK8sControlPlane
metadata:
  name: ${CLUSTER_NAME}-control-plane
  namespace: default
spec:
  controlPlaneConfig:
    initConfiguration:
      # joinTokenTTLInSecs: 9000
      addons:
        - dns
        - ingress
        - rbac
      httpProxy: "${CONTAINERD_HTTP_PROXY:=}"
      httpsProxy: "${CONTAINERD_HTTPS_PROXY:=}"
      noProxy: "${CONTAINERD_NO_PROXY:=}"
      riskLevel: "${SNAP_RISKLEVEL:=}"
      confinement: "${SNAP_CONFINEMENT:=}"
    clusterConfiguration:
      portCompatibilityRemap: true
  machineTemplate:
    infrastructureTemplate:
      apiVersion: infrastructure.cluster.x-k8s.io/v1alpha6
      kind: OpenStackMachineTemplate
      name: "${CLUSTER_NAME}-control-plane"
  replicas: ${CONTROL_PLANE_MACHINE_COUNT}
  version: "v${KUBERNETES_VERSION}"
  upgradeStrategy: "${UPGRADE_STRATEGY}"
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha6
kind: OpenStackMachineTemplate
metadata:
  name: ${CLUSTER_NAME}-control-plane
  namespace: default
spec:
  template:
    spec:
      # rootVolume:
      #   diskSize: ${OPENSTACK_ROOTVOLUME_DISKSIZE}
      #   volumeType: ${OPENSTACK_ROOTVOLUME_VOLUMETYPE}
      #   availabilityZone: ${OPENSTACK_ROOTVOLUME_AVAILABILITYZONE}
      cloudName: ${OPENSTACK_CLOUD}
      flavor: ${OPENSTACK_CONTROL_PLANE_MACHINE_FLAVOR}
      identityRef:
        kind: Secret
        name: ${CLUSTER_NAME}-cloud-config
      image: ${OPENSTACK_IMAGE_NAME}
      sshKeyName: ${OPENSTACK_SSH_KEY_NAME}
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: MachineDeployment
metadata:
  name: ${CLUSTER_NAME}-worker-node
  namespace: default
spec:
  clusterName: ${CLUSTER_NAME}
  replicas: ${WORKER_MACHINE_COUNT}
  selector:
    matchLabels:
  template:
    spec:
      bootstrap:
        configRef:
          apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
          kind: MicroK8sConfigTemplate
          name: ${CLUSTER_NAME}-worker-node
      clusterName: ${CLUSTER_NAME}
      failureDomain: ${OPENSTACK_FAILURE_DOMAIN}
      infrastructureRef:
        apiVersion: infrastructure.cluster.x-k8s.io/v1alpha6
        kind: OpenStackMachineTemplate
        name: ${CLUSTER_NAME}-worker-node
      version: v${KUBERNETES_VERSION}
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha6
kind: OpenStackMachineTemplate
metadata:
  name: ${CLUSTER_NAME}-worker-node
  namespace: default
spec:
  template:
    spec:
      # rootVolume:
      #   diskSize: ${OPENSTACK_ROOTVOLUME_DISKSIZE}
      #   volumeType: ${OPENSTACK_ROOTVOLUME_VOLUMETYPE}
      #   availabilityZone: ${OPENSTACK_ROOTVOLUME_AVAILABILITYZONE}
      securityGroups:
        - name: edgecraft-nodeport
      cloudName: ${OPENSTACK_CLOUD}
      flavor: ${OPENSTACK_NODE_MACHINE_FLAVOR}
      identityRef:
        kind: Secret
        name: ${CLUSTER_NAME}-cloud-config
      image: ${OPENSTACK_IMAGE_NAME}
      sshKeyName: ${OPENSTACK_SSH_KEY_NAME}
---
apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
kind: MicroK8sConfigTemplate
metadata:
  name: ${CLUSTER_NAME}-worker-node
  namespace: default
spec:
  template:
    spec:
      clusterConfiguration:
        portCompatibilityRemap: true
      initConfiguration:
        httpProxy: "${CONTAINERD_HTTP_PROXY:=}"
        httpsProxy: "${CONTAINERD_HTTPS_PROXY:=}"
        noProxy: "${CONTAINERD_NO_PROXY:=}"
        riskLevel: "${SNAP_RISKLEVEL:=}"
        confinement: "${SNAP_CONFINEMENT:=}"